import torch

from torch_geometric.utils import get_mesh_laplacian


def test_get_mesh_laplacian():

    # cube
    pos = torch.Tensor([[1.0, 1.0, 1.0], [1.0, -1.0, 1.0], \
                        [-1.0, -1.0, 1.0], [-1.0, 1.0, 1.0], \
                        [1.0, 1.0, -1.0], [1.0, -1.0, -1.0], \
                        [-1.0, -1.0, -1.0], [-1.0, 1.0, -1.0]])
    face = torch.Tensor([[0, 1, 2], [0, 3, 2], [4, 5, 1], \
                         [4, 0, 1], [7, 6, 5], [7, 4, 5], \
                         [3, 2, 6], [3, 7, 6], [4, 0, 3], \
                         [4, 7, 3], [1, 5, 6], [1, 2, 6]]).long().t()

    lap = get_mesh_laplacian(pos, face)
    assert torch.all(lap[0] == torch.Tensor([[0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, \
                                              2, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 5, \
                                              5, 5, 5, 6, 6, 6, 6, 6, 7, 7, 7, 7, \
                                              0, 1, 2, 3, 4, 5, 6, 7],
                                             [1, 2, 3, 4, 0, 2, 4, 5, 6, 0, 1, 3, \
                                              6, 0, 2, 4, 6, 7, 0, 1, 3, 5, 7, 1, \
                                              4, 6, 7, 1, 2, 3, 5, 7, 3, 4, 5, 6, \
                                              0, 1, 2, 3, 4, 5, 6, 7]]))
    assert torch.allclose(lap[1], torch.Tensor([-1.0, -0.0, -1.0, -1.0, -1.0, -1.0, \
                                                -0.0, -1.0, -0.0, -0.0, -1.0, -1.0, \
                                                -1.0, -1.0, -1.0, -0.0, -0.0, -1.0, \
                                                -1.0, -0.0, -0.0, -1.0, -1.0, -1.0, \
                                                -1.0, -1.0, -0.0, -0.0, -1.0, -0.0, \
                                                -1.0, -1.0, -1.0, -1.0, -0.0, -1.0, \
                                                1.125, 0.9, 1.125, 0.9, \
                                                0.9, 1.125, 0.9, 1.125]))
