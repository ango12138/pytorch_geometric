]633;C]633;E;for i in `seq 1 100`;20dbd770-15f8-497a-862a-61544a64c8aa[1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.5, pytest-7.4.3, pluggy-1.3.0 -- /home/pyg/anaconda3/envs/kgajdamo-dist/bin/python
cachedir: .pytest_cache
rootdir: /home/pyg/kgajdamo/graphlearn-dev/pytorch_geometric-kgajdamo
configfile: pyproject.toml
[1mcollecting ... [0mcollected 22 items

test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler[False] before dist_neighbor_sample
p_srcs=tensor([0, 4]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([8]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler[True] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 0, 1]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[uniform-None] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 5]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([5]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[uniform-seed_time1] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 1]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[last-None] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 5]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([5]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[last-seed_time1] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 6]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([0, 1]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[uniform-seed_time0] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[uniform-seed_time1] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([7]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[last-seed_time0] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([1]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[last-seed_time1] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([7]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_hetero[False] indptr: tensor([   0,   16,   29,   37,   51,   59,   76,   85,  108,  131,  141,  153,
         164,  170,  185,  197,  208,  224,  231,  240,  254,  260,  270,  281,
         293,  303,  315,  323,  330,  338,  349,  355,  368,  377,  387,  395,
         406,  419,  429,  445,  456,  468,  478,  489,  502,  513,  525,  534,
         549,  557,  571,  581,  593,  601,  608,  617,  627,  637,  645,  659,
         671,  685,  701,  710,  725,  741,  752,  764,  777,  790,  800,  808,
         822,  831,  841,  856,  869,  878,  887,  897,  908,  923,  931,  941,
         952,  967,  980,  989, 1001, 1012, 1026, 1036, 1048, 1060, 1071, 1081,
        1088, 1092, 1102, 1115, 1123, 1131, 1141, 1152, 1165, 1181, 1191, 1199,
        1214, 1225, 1237, 1244, 1254, 1265, 1279, 1298, 1311, 1326, 1339, 1347,
        1356, 1363, 1371, 1388, 1397, 1410, 1421, 1432, 1443, 1456, 1468, 1482,
        1501, 1518, 1525, 1543, 1555, 1572, 1584, 1604, 1616, 1632, 1646, 1659,
        1663, 1674, 1686, 1699, 1714, 1726, 1743, 1751, 1765, 1772, 1784, 1797,
        1811, 1819, 1831, 1849, 1860, 1871, 1885, 1900, 1911, 1923, 1934, 1948,
        1960, 1970, 1985])
index: tensor([  7,  19,  21,  ..., 120, 131, 165])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([38,  7, 67, 64, 26, 21, 12, 71, 34]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([38,  7, 67, 64, 26, 21, 12, 71, 34]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 9,  2, 52, 56, 70, 35, 65, 24]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 9,  2, 52, 56, 70, 35, 65, 24]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([38,  7, 67, 64, 26, 21, 12, 71, 34]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 9,  2, 52, 56, 70, 35, 65, 24]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([ 1, 19, 54]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 1, 19, 54]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 1, 19, 54]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([10, 11, 69,  8, 12, 19, 23, 49, 62, 60, 51]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([10, 11, 69,  8, 12, 19, 23, 49, 62, 60, 51]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([35,  5,  8, 51, 45, 47, 30, 53, 59, 40, 84, 69]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([35,  5,  8, 51, 45, 47, 30, 53, 59, 40, 84, 69]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([10, 11, 69,  8, 12, 19, 23, 49, 62, 60, 51]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([35,  5,  8, 51, 45, 47, 30, 53, 59, 40, 84, 69]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_hetero[True] indptr: tensor([   0,   12,   25,   34,   45,   60,   67,   80,   91,  111,  127,  140,
         150,  160,  168,  179,  190,  207,  211,  226,  239,  250,  261,  272,
         283,  297,  309,  313,  327,  346,  357,  371,  382,  390,  402,  409,
         422,  432,  440,  460,  474,  481,  498,  512,  519,  539,  552,  566,
         574,  587,  598,  607,  619,  630,  646,  650,  661,  680,  690,  700,
         710,  718,  731,  743,  756,  767,  780,  795,  807,  815,  831,  846,
         861,  873,  884,  893,  902,  913,  925,  934,  946,  957,  964,  980,
         994, 1004, 1014, 1021, 1028, 1041, 1048, 1063, 1078, 1087, 1105, 1124,
        1131, 1138, 1150, 1165, 1182, 1199, 1212, 1223, 1235, 1245, 1254, 1262,
        1273, 1281, 1290, 1297, 1305, 1317, 1324, 1336, 1354, 1360, 1372, 1380,
        1386, 1394, 1407, 1423, 1434, 1444, 1459, 1471, 1485, 1503, 1508, 1522,
        1535, 1545, 1550, 1563, 1576, 1592, 1602, 1616, 1626, 1635, 1648, 1659,
        1675, 1685, 1693, 1707, 1723, 1735, 1746, 1757, 1767, 1776, 1782, 1803,
        1820, 1834, 1848, 1857, 1871, 1885, 1897, 1911, 1926, 1935, 1949, 1961,
        1968, 1979, 1992, 2007, 2018, 2026, 2036, 2046, 2057, 2073, 2080, 2092,
        2102, 2117, 2126, 2137, 2151, 2165, 2180, 2188, 2199, 2209, 2223, 2236,
        2245, 2257, 2266, 2281, 2296, 2305, 2321, 2333, 2346, 2359, 2369, 2384,
        2391])
index: tensor([  6,  17,  18,  ..., 124, 138, 154])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([34, 14,  2,  0,  6, 60, 90, 22,  6, 17, 90]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([34, 14,  2,  0,  6, 60, 90, 22,  6, 17, 90]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([35, 39, 87, 61, 54, 61, 86, 45]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([35, 39, 87, 61, 54, 61, 86, 45]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([34, 14,  2,  0,  6, 60, 90, 22,  6, 17, 90]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([35, 39, 87, 61, 54, 61, 86, 45]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([14]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([14]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([14]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([  8,  25,  43, 102,  77,  25,  84,  57,  65,  14,   4,  83]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([51, 18, 58, 71, 91, 32, 41, 33, 19,  1, 70, 95, 20, 88]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([  8,  25,  43, 102,  77,  25,  84,  57,  65,  14,   4,  83]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([51, 18, 58, 71, 91, 32, 41, 33, 19,  1, 70, 95, 20, 88]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([  8,  25,  43, 102,  77,  25,  84,  57,  65,  14,   4,  83]), one_hop_num=-1, p_seed_time=None, edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([51, 18, 58, 71, 91, 32, 41, 33, 19,  1, 70, 95, 20, 88]), one_hop_num=-1, p_seed_time=None, edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[uniform-None] indptr: tensor([   0,    9,   21,   32,   44,   55,   62,   73,   84,   95,  110,  123,
         130,  141,  155,  168,  183,  195,  208,  224,  233,  240,  254,  265,
         279,  296,  308,  311,  325,  334,  344,  355,  373,  383,  390,  407,
         422,  434,  441,  452,  466,  475,  482,  495,  508,  521,  536,  547,
         557,  569,  579,  585,  597,  610,  624,  633,  645,  654,  663,  673,
         682,  696,  708,  720,  731,  749,  757,  773,  784,  796,  808,  820,
         831,  846,  860,  869,  880,  894,  904,  910,  921,  935,  947,  960,
         973,  988, 1001, 1011, 1024, 1031, 1044, 1059, 1072, 1087, 1100, 1109,
        1121, 1135, 1147, 1161, 1174, 1190, 1201, 1212, 1224, 1241, 1249, 1260,
        1265, 1274, 1294, 1309, 1316, 1329, 1340, 1348, 1361, 1374, 1383, 1396,
        1402, 1409, 1417, 1429, 1446, 1459, 1470, 1480, 1489, 1500, 1513, 1519,
        1532, 1541, 1550, 1561, 1574, 1588, 1598, 1610, 1621, 1636, 1642, 1651,
        1666, 1683, 1695, 1709, 1724, 1731, 1742, 1755, 1770, 1782, 1788, 1803,
        1811, 1823, 1837, 1847, 1862, 1872, 1882, 1895, 1904, 1917, 1925, 1935,
        1949, 1964, 1975, 1993, 1999, 2006])
index: tensor([ 19,  24,  64,  ..., 101, 109, 135])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([68,  1]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([68,  1]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([68,  1]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([16, 75, 70,  6, 15,  1, 66, 68, 61, 28, 22, 15, 14, 85]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([16, 75, 70,  6, 15,  1, 66, 68, 61, 28, 22, 15, 14, 85]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([16, 75, 70,  6, 15,  1, 66, 68, 61, 28, 22, 15, 14, 85]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  2,  2,  4,  4,  4,  6,  6,  6,  8,  9,  9,  9, 10, 10,
        12, 12, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 19, 19, 19, 19, 21, 21,
        21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 28, 28, 29, 30,
        30, 33, 34, 35, 35, 35, 36, 38, 39, 40, 40, 42, 42, 44, 44, 45, 46, 46,
        47, 47, 48, 48, 49, 51, 51, 52, 52, 53, 54, 54, 54, 55, 56, 57, 58, 58,
        60, 60, 60, 61, 61, 61, 62, 63, 63, 63, 64, 64, 65, 65, 65, 66, 66, 67,
        67, 67, 67, 68, 68, 69, 69, 70, 70, 73, 73, 74, 75, 75, 76, 76, 77, 77,
        77, 77, 78, 80, 80, 80, 81, 82, 82, 83, 84, 84, 85, 85])
out.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  2,  2,  4,  4,  4,  6,  6,  6,  8,  9,  9,  9, 10, 10,
        12, 12, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 19, 19, 19, 19, 21, 21,
        21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 24, 24, 25, 28, 28, 29, 30,
        30, 33, 34, 35, 35, 35, 36, 38, 39, 40, 40, 42, 42, 44, 44, 45, 46, 46,
        47, 47, 48, 48, 49, 51, 51, 52, 52, 53, 54, 54, 54, 55, 56, 57, 58, 58,
        60, 60, 60, 61, 61, 61, 62, 63, 63, 63, 64, 64, 65, 65, 65, 66, 66, 67,
        67, 67, 67, 68, 68, 69, 69, 70, 70, 73, 73, 74, 75, 75, 76, 76, 77, 77,
        77, 77, 78, 80, 80, 80, 81, 82, 82, 83, 84, 84, 85, 85])
out_dist.node[k].sort()[0]:
tensor([], dtype=torch.int64)
out.node[k].sort()[0]:
tensor([], dtype=torch.int64)
before dist_neighbor_sample
p_srcs=tensor([80]), one_hop_num=-1, p_seed_time=tensor([2]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([80]), one_hop_num=-1, p_seed_time=tensor([2]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([80]), one_hop_num=-1, p_seed_time=tensor([2]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([81, 71,  6, 13, 57, 47, 65, 15]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([84,  9, 77, 76, 64, 24, 19, 84,  0, 49]), one_hop_num=-1, p_seed_time=tensor([2, 2, 1, 1, 1, 1, 1, 2, 2, 2]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([81, 71,  6, 13, 57, 47, 65, 15]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([81, 71,  6, 13, 57, 47, 65, 15]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([84,  9, 77, 76, 64, 24, 19, 84,  0, 49]), one_hop_num=-1, p_seed_time=tensor([2, 2, 1, 1, 1, 1, 1, 2, 2, 2]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([84,  9, 77, 76, 64, 24, 19, 84,  0, 49]), one_hop_num=-1, p_seed_time=tensor([2, 2, 1, 1, 1, 1, 1, 2, 2, 2]), edge_type=('v1', 'e0', 'v0')
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  3,  4,  5,  6,  6,  6,  7,  8,  8,  9,
         9,  9,  9, 10, 10, 10, 11, 12, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16,
        17, 18, 18, 19, 19, 19, 20, 21, 21, 21, 22, 22, 23, 23, 23, 23, 24, 24,
        24, 24, 25, 25, 27, 28, 28, 29, 30, 30, 31, 32, 32, 34, 34, 35, 35, 35,
        36, 36, 37, 38, 38, 38, 39, 39, 39, 40, 40, 40, 42, 42, 42, 43, 44, 46,
        47, 47, 47, 48, 48, 49, 50, 51, 52, 52, 52, 53, 53, 54, 55, 58, 58, 59,
        59, 60, 60, 60, 60, 61, 61, 61, 62, 63, 63, 63, 64, 64, 64, 65, 66, 66,
        66, 67, 67, 67, 68, 68, 68, 69, 69, 70, 72, 72, 73, 73, 73, 74, 75, 76,
        76, 76, 77, 77, 77, 77, 78, 78, 80, 80, 80, 81, 82, 82, 83, 83, 84, 84,
        84, 85, 85, 85])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  3,  4,  5,  6,  6,  6,  7,  8,  8,  9,
         9,  9,  9, 10, 10, 10, 11, 12, 14, 14, 14, 15, 15, 15, 16, 16, 16, 16,
        17, 18, 18, 19, 19, 19, 20, 21, 21, 21, 22, 22, 23, 23, 23, 23, 24, 24,
        24, 24, 25, 25, 27, 28, 28, 29, 30, 30, 31, 32, 32, 34, 34, 35, 35, 35,
        36, 36, 37, 38, 38, 38, 39, 39, 39, 40, 40, 40, 42, 42, 42, 43, 44, 46,
        47, 47, 47, 48, 48, 49, 50, 51, 52, 52, 52, 53, 53, 54, 55, 58, 58, 59,
        59, 60, 60, 60, 60, 61, 61, 61, 62, 63, 63, 63, 64, 64, 64, 65, 66, 66,
        66, 67, 67, 67, 68, 68, 68, 69, 69, 70, 72, 72, 73, 73, 73, 74, 75, 76,
        76, 76, 77, 77, 77, 77, 78, 78, 80, 80, 80, 81, 82, 82, 83, 83, 84, 84,
        84, 85, 85, 85])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  2,  3,  4,  6,  6,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14,
        15, 16, 17, 17, 18, 18, 19, 20, 22, 23, 23, 24, 26, 29, 29, 30, 30, 32,
        33, 34, 34, 35, 36, 36, 37, 38, 38, 39, 40, 41, 42, 42, 43, 43, 44, 46,
        47, 48, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 58, 59, 60, 61, 62, 62,
        63, 64, 65, 66, 66, 68, 70, 70, 71, 72, 72, 73, 73, 74, 75, 76, 77, 78,
        80, 80, 81, 82, 82, 83, 84, 85, 85, 86])
out.node[k].sort()[0]:
tensor([ 0,  0,  1,  2,  3,  4,  6,  6,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14,
        15, 16, 17, 17, 18, 18, 19, 20, 22, 23, 23, 24, 26, 29, 29, 30, 30, 32,
        33, 34, 34, 35, 36, 36, 37, 38, 38, 39, 40, 41, 42, 42, 43, 43, 44, 46,
        47, 48, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 58, 59, 60, 61, 62, 62,
        63, 64, 65, 66, 66, 68, 70, 70, 71, 72, 72, 73, 73, 74, 75, 76, 77, 78,
        80, 80, 81, 82, 82, 83, 84, 85, 85, 86])
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[uniform-seed_time1] indptr: tensor([   0,   10,   23,   36,   50,   57,   68,   80,   89,   95,  105,  119,
         127,  137,  148,  161,  179,  189,  205,  217,  225,  231,  242,  244,
         255,  266,  272,  285,  296,  305,  316,  324,  339,  351,  367,  376,
         387,  394,  403,  413,  425,  429,  435,  441,  455,  472,  487,  499,
         516,  528,  539,  546,  557,  568,  577,  586,  597,  606,  618,  628,
         648,  659,  668,  674,  684,  697,  711,  721,  732,  742,  753,  764,
         768,  779,  792,  801,  810,  826,  835,  848,  860,  876,  887,  899,
         914,  927,  934,  943,  953,  969,  989, 1001, 1010, 1018, 1032, 1038,
        1049, 1056, 1069, 1081, 1098, 1109, 1117, 1126, 1139, 1151, 1164, 1178,
        1189, 1204, 1226, 1239, 1253, 1263, 1281, 1293, 1304, 1321, 1334, 1357,
        1365, 1378, 1398, 1411, 1428, 1435, 1445, 1457, 1466, 1479, 1496, 1507,
        1526, 1538, 1552, 1565, 1578, 1586, 1595, 1608, 1628, 1641, 1650, 1661,
        1674, 1680, 1690, 1699, 1707, 1718, 1728, 1736, 1753, 1767, 1778, 1788,
        1802, 1819, 1835, 1848, 1862, 1872, 1887, 1901, 1917, 1927, 1937, 1949,
        1961, 1973, 1984, 1993, 2004, 2013, 2024, 2032, 2039, 2049, 2057, 2067,
        2084, 2102, 2114, 2128, 2143, 2154, 2166, 2177, 2191, 2210, 2224, 2240])
index: tensor([  4,  11,  73,  ..., 156, 167, 169])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([89,  6]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([89,  6]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([89,  6]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  6, 61, 89])
out.node[k].sort()[0]:
tensor([ 0,  6, 61, 89])
out_dist.node[k].sort()[0]:
tensor([], dtype=torch.int64)
out.node[k].sort()[0]:
tensor([], dtype=torch.int64)
before dist_neighbor_sample
p_srcs=tensor([77]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([77]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([77]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'rev_e0', 'v0')
out_dist.node[k].sort()[0]:
tensor([0, 6])
out.node[k].sort()[0]:
tensor([0, 6])
out_dist.node[k].sort()[0]:
tensor([63, 77])
out.node[k].sort()[0]:
tensor([63, 77])
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[uniform-seed_time2] indptr: tensor([   0,   11,   24,   31,   44,   55,   61,   73,   79,   89,  107,  115,
         125,  134,  145,  157,  168,  177,  195,  206,  219,  229,  241,  252,
         268,  278,  289,  299,  309,  327,  340,  356,  369,  382,  389,  398,
         413,  425,  439,  455,  465,  481,  495,  507,  519,  531,  539,  547,
         556,  567,  575,  588,  598,  613,  621,  633,  645,  656,  665,  680,
         695,  711,  721,  736,  751,  761,  775,  787,  800,  814,  831,  842,
         852,  858,  872,  882,  891,  905,  916,  925,  937,  952,  963,  974,
         986,  994, 1004, 1013, 1020, 1031, 1043, 1051, 1070, 1079, 1095, 1107,
        1114, 1123, 1134, 1150, 1158, 1176, 1187, 1198, 1208, 1218, 1227, 1240,
        1258, 1270, 1278, 1295, 1312, 1323, 1342, 1353, 1360, 1374, 1389, 1400,
        1408, 1415, 1428, 1440, 1450, 1462, 1477, 1487, 1498, 1509, 1522, 1532,
        1546, 1558, 1569, 1586, 1590, 1601, 1616, 1628, 1641, 1655, 1665, 1676,
        1686, 1696, 1706, 1715, 1724, 1735, 1745, 1758, 1772, 1784, 1800, 1810,
        1819, 1828, 1839, 1848, 1859, 1873, 1885, 1901, 1917, 1931, 1943, 1955,
        1967, 1976, 1991, 2002, 2013, 2026, 2036, 2046, 2059, 2071, 2081, 2091,
        2104, 2112, 2120, 2141, 2150, 2163, 2169, 2182, 2192, 2206, 2214, 2223,
        2239])
index: tensor([ 11,  29,  36,  ..., 160, 176, 183])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([73,  0]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([73,  0]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([73,  0]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([56, 53, 26, 61, 74, 34,  1, 75, 13, 37, 28, 13]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([91, 61,  0, 20, 89, 73, 43, 40, 80, 78, 76, 60, 29]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([56, 53, 26, 61, 74, 34,  1, 75, 13, 37, 28, 13]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([91, 61,  0, 20, 89, 73, 43, 40, 80, 78, 76, 60, 29]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([91, 61,  0, 20, 89, 73, 43, 40, 80, 78, 76, 60, 29]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([56, 53, 26, 61, 74, 34,  1, 75, 13, 37, 28, 13]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  1,  2,  3,  4,  4,  5,  5,  6,  6,  8,  8,  8,  8,  9,
         9,  9,  9, 10, 11, 11, 11, 12, 13, 13, 14, 14, 15, 17, 17, 17, 18, 18,
        19, 20, 20, 20, 21, 21, 21, 22, 22, 23, 23, 23, 24, 24, 24, 25, 26, 26,
        27, 27, 28, 28, 29, 29, 29, 29, 30, 30, 31, 32, 32, 33, 34, 34, 35, 35,
        35, 36, 36, 36, 37, 37, 37, 37, 38, 38, 39, 39, 39, 40, 40, 41, 41, 41,
        42, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 46, 47, 47, 47, 48, 48, 49,
        49, 49, 50, 50, 51, 52, 52, 52, 53, 53, 55, 56, 57, 57, 58, 58, 58, 58,
        59, 59, 59, 60, 60, 60, 61, 61, 61, 62, 62, 62, 63, 63, 63, 63, 64, 64,
        65, 65, 65, 66, 67, 67, 68, 69, 69, 70, 70, 70, 70, 73, 73, 74, 74, 75,
        75, 76, 76, 76, 76, 77, 77, 77, 77, 78, 78, 78, 79, 79, 80, 80, 80, 80,
        81, 81, 82, 82, 82, 83, 83, 83, 83, 85, 85, 85, 87, 87, 88, 88, 88, 89,
        89, 89, 90, 90, 90, 90, 91, 91, 91, 92, 93, 93, 94, 94, 95, 96, 96, 96])
out.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  1,  2,  3,  4,  4,  5,  5,  6,  6,  8,  8,  8,  8,  9,
         9,  9,  9, 10, 11, 11, 11, 12, 13, 13, 14, 14, 15, 17, 17, 17, 18, 18,
        19, 20, 20, 20, 21, 21, 21, 22, 22, 23, 23, 23, 24, 24, 24, 25, 26, 26,
        27, 27, 28, 28, 29, 29, 29, 29, 30, 30, 31, 32, 32, 33, 34, 34, 35, 35,
        35, 36, 36, 36, 37, 37, 37, 37, 38, 38, 39, 39, 39, 40, 40, 41, 41, 41,
        42, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 46, 47, 47, 47, 48, 48, 49,
        49, 49, 50, 50, 51, 52, 52, 52, 53, 53, 55, 56, 57, 57, 58, 58, 58, 58,
        59, 59, 59, 60, 60, 60, 61, 61, 61, 62, 62, 62, 63, 63, 63, 63, 64, 64,
        65, 65, 65, 66, 67, 67, 68, 69, 69, 70, 70, 70, 70, 73, 73, 74, 74, 75,
        75, 76, 76, 76, 76, 77, 77, 77, 77, 78, 78, 78, 79, 79, 80, 80, 80, 80,
        81, 81, 82, 82, 82, 83, 83, 83, 83, 85, 85, 85, 87, 87, 88, 88, 88, 89,
        89, 89, 90, 90, 90, 90, 91, 91, 91, 92, 93, 93, 94, 94, 95, 96, 96, 96])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  5,  5,  5,
         6,  6,  7,  7,  7,  8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 11, 11, 12,
        13, 13, 13, 13, 14, 14, 14, 14, 15, 16, 16, 16, 16, 17, 17, 17, 18, 18,
        18, 19, 19, 20, 20, 20, 20, 21, 22, 23, 23, 24, 24, 24, 25, 25, 26, 26,
        26, 27, 27, 28, 28, 28, 29, 29, 30, 30, 30, 31, 31, 31, 32, 32, 32, 33,
        33, 34, 34, 34, 34, 35, 35, 36, 36, 36, 37, 37, 37, 38, 38, 39, 39, 39,
        40, 40, 40, 41, 41, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 46, 46, 46,
        46, 47, 47, 48, 48, 48, 48, 49, 49, 49, 50, 50, 51, 51, 51, 52, 52, 53,
        53, 53, 53, 54, 54, 55, 56, 56, 56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
        60, 60, 60, 61, 61, 61, 62, 62, 62, 62, 63, 63, 63, 64, 64, 64, 65, 65,
        65, 65, 66, 66, 66, 67, 67, 68, 68, 69, 69, 69, 69, 70, 70, 70, 71, 71,
        71, 72, 72, 72, 72, 73, 73, 73, 73, 74, 74, 74, 75, 75, 75, 76, 76, 77,
        78, 78, 78, 78, 79, 79, 79, 80, 80, 80, 80, 81, 82, 82, 82, 82, 83, 83,
        84, 85, 85, 85, 85, 86, 86, 86, 87, 87, 87, 88, 89, 89, 89, 90, 91, 91,
        91, 91, 92, 92, 92, 93, 94, 94, 94, 94])
out.node[k].sort()[0]:
tensor([ 0,  1,  1,  1,  2,  2,  3,  3,  3,  4,  4,  5,  5,  5,  6,  7,  7,  7,
         8,  8,  8,  8,  9,  9, 10, 10, 10, 11, 11, 12, 13, 13, 13, 13, 14, 14,
        14, 14, 15, 16, 16, 16, 17, 17, 18, 18, 18, 19, 19, 20, 20, 20, 21, 22,
        23, 23, 24, 24, 25, 25, 26, 26, 27, 28, 28, 28, 29, 29, 30, 30, 30, 31,
        31, 31, 32, 32, 32, 33, 34, 34, 34, 34, 35, 36, 36, 36, 37, 37, 37, 38,
        38, 39, 39, 40, 40, 41, 41, 42, 42, 43, 43, 43, 44, 44, 44, 45, 45, 46,
        46, 46, 47, 48, 48, 48, 48, 49, 49, 49, 50, 51, 51, 52, 52, 53, 53, 53,
        53, 54, 54, 55, 56, 56, 56, 56, 57, 57, 58, 58, 58, 59, 59, 60, 60, 60,
        61, 61, 61, 62, 62, 62, 63, 63, 64, 64, 64, 65, 65, 65, 65, 66, 66, 66,
        67, 67, 68, 68, 69, 69, 69, 70, 70, 71, 71, 72, 72, 72, 72, 73, 73, 73,
        74, 74, 74, 75, 75, 75, 76, 76, 78, 78, 78, 79, 79, 79, 80, 80, 80, 81,
        82, 82, 82, 82, 83, 83, 84, 85, 85, 85, 85, 86, 86, 87, 87, 88, 89, 89,
        89, 91, 91, 91, 91, 92, 92, 93, 94, 94, 94, 94])
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'rev_e0', 'v0')
p_srcs=tensor([49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 1, 68, 58, 25, 36, 11, 49, 77, 21, 83, 90]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([62, 92, 20, 46, 62, 65, 78, 23, 10, 14,  9, 93, 49, 49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([62, 92, 20, 46, 62, 65, 78, 23, 10, 14,  9, 93, 49, 49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 1, 68, 58, 25, 36, 11, 49, 77, 21, 83, 90]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([62, 92, 20, 46, 62, 65, 78, 23, 10, 14,  9, 93, 49, 49, 78]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([ 1, 68, 58, 25, 36, 11, 49, 77, 21, 83, 90]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v0')
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  4,  4,  5,  6,  6,  8,  8,  9,
         9,  9, 11, 11, 13, 13, 14, 14, 15, 16, 17, 17, 17, 18, 19, 19, 20, 20,
        20, 21, 21, 21, 22, 23, 23, 23, 23, 24, 24, 24, 25, 25, 25, 26, 26, 27,
        28, 28, 29, 29, 29, 29, 30, 31, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35,
        36, 36, 36, 37, 37, 37, 38, 38, 39, 39, 40, 40, 40, 41, 41, 41, 42, 42,
        42, 43, 43, 44, 44, 44, 45, 45, 45, 46, 47, 48, 48, 49, 49, 49, 50, 51,
        52, 52, 52, 53, 53, 55, 55, 56, 58, 58, 58, 58, 59, 59, 59, 60, 60, 60,
        61, 62, 62, 62, 63, 63, 63, 64, 64, 65, 65, 65, 65, 66, 66, 67, 68, 68,
        68, 69, 70, 70, 70, 70, 71, 73, 73, 74, 74, 75, 75, 75, 76, 76, 76, 76,
        77, 77, 77, 77, 78, 78, 79, 79, 80, 80, 80, 80, 81, 81, 81, 82, 82, 83,
        83, 83, 83, 85, 86, 87, 87, 87, 88, 88, 88, 88, 89, 89, 90, 90, 90, 90,
        91, 91, 91, 93, 93, 94, 95, 96])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  4,  4,  5,  6,  6,  8,  8,  9,
         9,  9, 11, 11, 13, 13, 14, 14, 15, 16, 17, 17, 17, 18, 19, 19, 20, 20,
        20, 21, 21, 21, 22, 23, 23, 23, 23, 24, 24, 24, 25, 25, 25, 26, 26, 27,
        28, 28, 29, 29, 29, 29, 30, 31, 32, 32, 33, 33, 33, 34, 34, 34, 35, 35,
        36, 36, 36, 37, 37, 37, 38, 38, 39, 39, 40, 40, 40, 41, 41, 41, 42, 42,
        42, 43, 43, 44, 44, 44, 45, 45, 45, 46, 47, 48, 48, 49, 49, 49, 50, 51,
        52, 52, 52, 53, 53, 55, 55, 56, 58, 58, 58, 58, 59, 59, 59, 60, 60, 60,
        61, 62, 62, 62, 63, 63, 63, 64, 64, 65, 65, 65, 65, 66, 66, 67, 68, 68,
        68, 69, 70, 70, 70, 70, 71, 73, 73, 74, 74, 75, 75, 75, 76, 76, 76, 76,
        77, 77, 77, 77, 78, 78, 79, 79, 80, 80, 80, 80, 81, 81, 81, 82, 82, 83,
        83, 83, 83, 85, 86, 87, 87, 87, 88, 88, 88, 88, 89, 89, 90, 90, 90, 90,
        91, 91, 91, 93, 93, 94, 95, 96])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  4,  5,  5,  5,  6,
         6,  7,  8,  8,  8,  9,  9,  9, 10, 10, 10, 11, 11, 11, 12, 13, 13, 13,
        13, 14, 14, 14, 14, 16, 16, 16, 16, 17, 17, 18, 19, 19, 19, 20, 20, 20,
        21, 21, 21, 23, 23, 23, 24, 24, 25, 26, 27, 28, 28, 28, 28, 29, 30, 30,
        31, 31, 31, 32, 32, 33, 34, 34, 34, 36, 37, 37, 37, 38, 39, 40, 40, 40,
        41, 42, 42, 43, 43, 43, 44, 44, 44, 45, 46, 46, 46, 47, 47, 48, 48, 49,
        49, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 54, 55, 55, 55, 56, 56,
        56, 57, 57, 57, 58, 58, 59, 59, 60, 60, 60, 61, 62, 62, 62, 62, 63, 63,
        63, 64, 64, 65, 65, 65, 65, 66, 66, 67, 68, 68, 68, 69, 69, 70, 70, 70,
        71, 72, 72, 73, 73, 73, 73, 74, 74, 75, 75, 75, 76, 76, 77, 78, 78, 78,
        78, 79, 79, 80, 80, 80, 81, 82, 82, 83, 83, 85, 85, 85, 85, 86, 86, 87,
        87, 87, 88, 89, 90, 91, 91, 91, 91, 92, 92, 93, 93, 93, 94, 94, 94, 94])
out.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  1,  1,  2,  2,  2,  2,  3,  3,  3,  4,  5,  5,  5,  6,
         6,  7,  8,  8,  8,  9,  9,  9, 10, 10, 10, 11, 11, 11, 12, 13, 13, 13,
        13, 14, 14, 14, 14, 16, 16, 16, 16, 17, 17, 18, 19, 19, 19, 20, 20, 20,
        21, 21, 21, 23, 23, 23, 24, 24, 25, 26, 27, 28, 28, 28, 28, 29, 30, 30,
        31, 31, 31, 32, 32, 33, 34, 34, 34, 36, 37, 37, 37, 38, 39, 40, 40, 40,
        41, 42, 42, 43, 43, 43, 44, 44, 44, 45, 46, 46, 46, 47, 47, 48, 48, 49,
        49, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 54, 55, 55, 55, 56, 56,
        56, 57, 57, 57, 58, 58, 59, 59, 60, 60, 60, 61, 62, 62, 62, 62, 63, 63,
        63, 64, 64, 65, 65, 65, 65, 66, 66, 67, 68, 68, 68, 69, 69, 70, 70, 70,
        71, 72, 72, 73, 73, 73, 73, 74, 74, 75, 75, 75, 76, 76, 77, 78, 78, 78,
        78, 79, 79, 80, 80, 80, 81, 82, 82, 83, 83, 85, 85, 85, 85, 86, 86, 87,
        87, 87, 88, 89, 90, 91, 91, 91, 91, 92, 92, 93, 93, 93, 94, 94, 94, 94])
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[last-None] indptr: tensor([   0,   17,   36,   49,   61,   73,   83,   91,  101,  113,  126,  138,
         152,  162,  175,  186,  201,  214,  232,  249,  260,  277,  285,  298,
         307,  320,  330,  342,  347,  362,  375,  386,  401,  406,  414,  431,
         443,  458,  470,  481,  494,  510,  523,  539,  551,  567,  573,  584,
         596,  615,  626,  632,  642,  658,  671,  689,  701,  713,  723,  738,
         749,  759,  777,  793,  808,  819,  838,  852,  858,  867,  879,  889,
         899,  912,  921,  929,  942,  952,  970,  982,  998, 1012, 1025, 1036,
        1052, 1061, 1073, 1080, 1088, 1099, 1110, 1126, 1132, 1136, 1148, 1155,
        1164, 1171, 1183, 1187, 1206, 1216, 1223, 1236, 1245, 1256, 1266, 1275,
        1286, 1293, 1304, 1317, 1330, 1339, 1347, 1358, 1371, 1389, 1400, 1414,
        1430, 1438, 1446, 1455, 1466, 1474, 1484, 1499, 1511, 1522, 1535, 1547,
        1555, 1562, 1581, 1596, 1607, 1620, 1632, 1640, 1650, 1662, 1669, 1687,
        1700, 1713, 1726, 1733, 1743, 1756, 1764, 1787, 1799, 1811, 1819, 1826,
        1837, 1846, 1852, 1868, 1882, 1892, 1900, 1911, 1923, 1935, 1946, 1961,
        1969, 1975, 1986, 2003, 2013, 2029, 2036, 2045, 2058, 2066, 2080, 2094,
        2103, 2115, 2130, 2144, 2152, 2161, 2169, 2183, 2199, 2211, 2227, 2233,
        2243, 2254, 2262, 2276, 2290, 2303])
index: tensor([ 11,  18,  29,  ..., 145, 164, 188])
after partitioning
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([ 6, 70,  1, 68, 37, 39, 12, 81, 87]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 6, 70,  1, 68, 37, 39, 12, 81, 87]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 6, 70,  1, 68, 37, 39, 12, 81, 87]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  1,  2,  2,  3,  4,  4,  5,  5,  5,  6,  6,  7,
         8,  9, 10, 11, 11, 11, 11, 12, 12, 13, 13, 14, 14, 15, 18, 18, 20, 20,
        20, 21, 22, 22, 22, 23, 23, 23, 24, 24, 25, 25, 26, 26, 28, 28, 28, 29,
        29, 29, 30, 31, 34, 35, 35, 36, 36, 36, 37, 37, 39, 39, 39, 40, 41, 43,
        44, 44, 44, 44, 45, 48, 48, 48, 49, 50, 51, 52, 52, 53, 54, 54, 55, 55,
        56, 56, 57, 57, 58, 58, 58, 60, 61, 61, 62, 62, 63, 63, 63, 64, 64, 64,
        65, 65, 66, 66, 67, 68, 68, 68, 70, 70, 73, 73, 75, 76, 77, 77, 77, 78,
        78, 78, 80, 80, 81, 81, 81, 82, 83, 83, 83, 84, 84, 85, 85, 86, 86, 86,
        87, 87])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  1,  2,  2,  3,  4,  4,  5,  5,  5,  6,  6,  7,
         8,  9, 10, 11, 11, 11, 11, 12, 12, 13, 13, 14, 14, 15, 18, 18, 20, 20,
        20, 21, 22, 22, 22, 23, 23, 23, 24, 24, 25, 25, 26, 26, 28, 28, 28, 29,
        29, 29, 30, 31, 34, 35, 35, 36, 36, 36, 37, 37, 39, 39, 39, 40, 41, 43,
        44, 44, 44, 44, 45, 48, 48, 48, 49, 50, 51, 52, 52, 53, 54, 54, 55, 55,
        56, 56, 57, 57, 58, 58, 58, 60, 61, 61, 62, 62, 63, 63, 63, 64, 64, 64,
        65, 65, 66, 66, 67, 68, 68, 68, 70, 70, 73, 73, 75, 76, 77, 77, 77, 78,
        78, 78, 80, 80, 81, 81, 81, 82, 83, 83, 83, 84, 84, 85, 85, 86, 86, 86,
        87, 87])
out_dist.node[k].sort()[0]:
tensor([], dtype=torch.int64)
out.node[k].sort()[0]:
tensor([], dtype=torch.int64)
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([57, 62]), one_hop_num=-1, p_seed_time=tensor([2, 2]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([57, 62]), one_hop_num=-1, p_seed_time=tensor([2, 2]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([57, 62]), one_hop_num=-1, p_seed_time=tensor([2, 2]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([26, 11, 44, 36, 48, 85, 63, 61, 58, 18, 29, 11, 64, 33, 20, 24, 69,  0,
        75,  3, 62, 48]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([26, 11, 44, 36, 48, 85, 63, 61, 58, 18, 29, 11, 64, 33, 20, 24, 69,  0,
        75,  3, 62, 48]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([26, 11, 44, 36, 48, 85, 63, 61, 58, 18, 29, 11, 64, 33, 20, 24, 69,  0,
        75,  3, 62, 48]), one_hop_num=-1, p_seed_time=tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([  4, 108,  31,  38,  41,  71,   3,  11,  61, 100,  78,  46,  38,  20]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([  4, 108,  31,  38,  41,  71,   3,  11,  61, 100,  78,  46,  38,  20]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([  4, 108,  31,  38,  41,  71,   3,  11,  61, 100,  78,  46,  38,  20]), one_hop_num=-1, p_seed_time=tensor([2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]), edge_type=('v0', 'e0', 'v1')
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,
         5,  5,  6,  6,  7,  7,  8,  8,  8,  9,  9, 10, 10, 11, 11, 11, 11, 12,
        12, 12, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 17, 18, 18, 19, 20, 20,
        20, 20, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 25, 25, 26, 26, 26,
        28, 28, 28, 29, 29, 29, 30, 30, 31, 31, 32, 33, 34, 34, 35, 35, 35, 36,
        36, 36, 36, 37, 37, 37, 39, 39, 39, 40, 41, 41, 42, 44, 44, 44, 44, 45,
        47, 48, 48, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 53, 54, 54, 54,
        55, 55, 55, 56, 56, 57, 57, 57, 58, 58, 58, 58, 59, 59, 60, 60, 60, 61,
        61, 61, 62, 62, 62, 63, 63, 63, 63, 64, 64, 65, 65, 65, 66, 66, 67, 68,
        68, 68, 68, 69, 69, 70, 70, 71, 71, 72, 73, 73, 73, 73, 74, 75, 75, 76,
        76, 77, 77, 77, 77, 78, 78, 78, 78, 79, 80, 80, 81, 81, 81, 81, 82, 82,
        83, 83, 83, 84, 84, 85, 85, 86, 86, 86, 87, 87, 87])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,
         5,  5,  6,  6,  7,  7,  8,  8,  8,  9,  9, 10, 10, 11, 11, 11, 11, 12,
        12, 12, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 17, 18, 18, 19, 20, 20,
        20, 20, 21, 21, 22, 22, 22, 23, 23, 23, 23, 24, 24, 25, 25, 26, 26, 26,
        28, 28, 28, 29, 29, 29, 30, 30, 31, 31, 32, 33, 34, 34, 35, 35, 35, 36,
        36, 36, 36, 37, 37, 37, 39, 39, 39, 40, 41, 41, 42, 44, 44, 44, 44, 45,
        47, 48, 48, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 53, 54, 54, 54,
        55, 55, 55, 56, 56, 57, 57, 57, 58, 58, 58, 58, 59, 59, 60, 60, 60, 61,
        61, 61, 62, 62, 62, 63, 63, 63, 63, 64, 64, 65, 65, 65, 66, 66, 67, 68,
        68, 68, 68, 69, 69, 70, 70, 71, 71, 72, 73, 73, 73, 73, 74, 75, 75, 76,
        76, 77, 77, 77, 77, 78, 78, 78, 78, 79, 80, 80, 81, 81, 81, 81, 82, 82,
        83, 83, 83, 84, 84, 85, 85, 86, 86, 86, 87, 87, 87])
out_dist.node[k].sort()[0]:
tensor([  0,   0,   1,   1,   2,   2,   3,   4,   4,   5,   5,   7,   9,  10,
         11,  11,  12,  13,  16,  16,  18,  18,  19,  19,  20,  20,  21,  22,
         23,  23,  24,  25,  26,  26,  27,  27,  28,  28,  29,  29,  30,  31,
         31,  32,  33,  33,  34,  35,  35,  36,  36,  37,  37,  38,  38,  40,
         40,  41,  41,  42,  42,  43,  44,  45,  45,  46,  47,  48,  48,  50,
         51,  51,  52,  54,  54,  55,  56,  56,  57,  57,  58,  58,  59,  60,
         60,  61,  62,  62,  63,  64,  64,  65,  67,  69,  70,  70,  71,  71,
         72,  72,  73,  74,  75,  75,  76,  78,  78,  79,  80,  80,  81,  82,
         82,  83,  84,  86,  87,  89,  89,  90,  90,  91,  93,  94,  94,  95,
         96,  97,  97,  98,  99, 100, 100, 101, 101, 105, 105, 106, 106, 107,
        107, 108, 108])
out.node[k].sort()[0]:
tensor([  0,   0,   1,   1,   2,   2,   3,   4,   4,   5,   5,   7,   9,  10,
         11,  11,  12,  13,  16,  16,  18,  18,  19,  19,  20,  20,  21,  22,
         23,  23,  24,  25,  26,  26,  27,  27,  28,  28,  29,  29,  30,  31,
         31,  32,  33,  33,  34,  35,  35,  36,  36,  37,  37,  38,  38,  40,
         40,  41,  41,  42,  42,  43,  44,  45,  45,  46,  47,  48,  48,  50,
         51,  51,  52,  54,  54,  55,  56,  56,  57,  57,  58,  58,  59,  60,
         60,  61,  62,  62,  63,  64,  64,  65,  67,  69,  70,  70,  71,  71,
         72,  72,  73,  74,  75,  75,  76,  78,  78,  79,  80,  80,  81,  82,
         82,  83,  84,  86,  87,  89,  89,  90,  90,  91,  93,  94,  94,  95,
         96,  97,  97,  98,  99, 100, 100, 101, 101, 105, 105, 106, 106, 107,
        107, 108, 108])
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[last-seed_time1] indptr: tensor([   0,    9,   14,   25,   40,   55,   69,   80,   90,  104,  119,  135,
         145,  153,  156,  164,  174,  186,  203,  217,  232,  250,  266,  277,
         290,  300,  312,  322,  332,  346,  357,  371,  381,  390,  405,  421,
         434,  451,  460,  468,  481,  497,  514,  524,  539,  554,  568,  574,
         584,  599,  614,  623,  639,  650,  667,  679,  691,  700,  711,  723,
         733,  744,  754,  766,  776,  785,  796,  814,  827,  835,  849,  864,
         878,  892,  905,  917,  934,  943,  959,  970,  984,  998, 1012, 1023,
        1033, 1048, 1058, 1072, 1082, 1101, 1110, 1123, 1135, 1153, 1165, 1183,
        1192, 1205, 1210, 1230, 1236, 1251, 1261, 1277, 1291, 1303, 1318, 1330,
        1346, 1353, 1367, 1381, 1397, 1407, 1417, 1428, 1437, 1445, 1460, 1478,
        1486, 1502, 1520, 1533, 1549, 1556, 1565, 1576, 1587, 1597, 1605, 1612,
        1619, 1633, 1648, 1660, 1665, 1673, 1680, 1693, 1700, 1711, 1720, 1732,
        1746, 1754, 1766, 1774, 1783, 1803, 1811, 1825, 1834, 1842, 1856, 1863,
        1866, 1880, 1887, 1900, 1919, 1931, 1943, 1953, 1967, 1983, 1992, 2001,
        2012, 2027, 2039, 2051, 2057, 2073, 2086, 2094, 2103, 2111, 2131, 2147,
        2155, 2161, 2169, 2180, 2192, 2203, 2214, 2222, 2237, 2246, 2260, 2267,
        2276, 2290, 2300, 2307, 2315, 2330, 2337, 2351, 2363, 2373, 2382, 2395,
        2409, 2423, 2433, 2442, 2454, 2469, 2477])
index: tensor([ 10,  11,  20,  ..., 153, 162, 165])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([85,  0]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([85,  0]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([85,  0]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  3, 79, 85])
out.node[k].sort()[0]:
tensor([ 0,  3, 79, 85])
out_dist.node[k].sort()[0]:
tensor([], dtype=torch.int64)
out.node[k].sort()[0]:
tensor([], dtype=torch.int64)
before dist_neighbor_sample
p_srcs=tensor([79]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([79]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([79]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([3]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([3]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([3]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'rev_e0', 'v0')
out_dist.node[k].sort()[0]:
tensor([0, 3])
out.node[k].sort()[0]:
tensor([0, 3])
out_dist.node[k].sort()[0]:
tensor([77, 79])
out.node[k].sort()[0]:
tensor([77, 79])
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal_hetero[last-seed_time2] indptr: tensor([   0,    6,   24,   35,   44,   60,   73,   87,  105,  117,  133,  143,
         161,  178,  193,  203,  216,  233,  250,  270,  282,  300,  311,  322,
         336,  347,  355,  365,  376,  392,  401,  413,  424,  437,  455,  462,
         476,  483,  497,  505,  515,  526,  533,  552,  561,  573,  581,  599,
         610,  625,  636,  649,  658,  670,  679,  695,  701,  712,  720,  738,
         747,  754,  772,  785,  795,  807,  817,  828,  838,  852,  868,  882,
         888,  896,  906,  921,  943,  952,  965,  985, 1003, 1008, 1022, 1031,
        1044, 1054, 1063, 1066, 1082, 1092, 1101, 1111, 1120, 1127, 1138, 1153,
        1163, 1177, 1187, 1201, 1213, 1223, 1230, 1242, 1248, 1253, 1269, 1280,
        1291, 1304, 1312, 1323, 1336, 1345, 1355, 1367, 1381, 1390, 1402, 1415,
        1421, 1430, 1439, 1453, 1468, 1471, 1483, 1497, 1511, 1519, 1533, 1540,
        1554, 1569, 1580, 1590, 1604, 1614, 1626, 1634, 1642, 1657, 1673, 1684,
        1697, 1704, 1716, 1723, 1737, 1751, 1765, 1777, 1792, 1802, 1810, 1824,
        1834, 1850, 1862, 1872, 1883, 1896, 1911, 1920, 1934, 1945, 1958, 1971,
        1980, 1987, 1998, 2005, 2014, 2021, 2034, 2043, 2054, 2073, 2089])
index: tensor([  6,  38,  63,  ..., 155, 156, 161])
after partitioning
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([15,  1]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([15,  1]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([15,  1]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([12, 61, 58, 73,  1,  8, 11, 14, 78, 15, 33, 40]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([81,  4, 28, 85, 84, 35, 61, 77, 14, 20, 72]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([12, 61, 58, 73,  1,  8, 11, 14, 78, 15, 33, 40]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([12, 61, 58, 73,  1,  8, 11, 14, 78, 15, 33, 40]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([81,  4, 28, 85, 84, 35, 61, 77, 14, 20, 72]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([81,  4, 28, 85, 84, 35, 61, 77, 14, 20, 72]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  4,  4,  4,  5,  5,  6,  6,
         7,  7,  7,  8,  8,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 12, 12, 13,
        13, 13, 14, 14, 14, 15, 15, 16, 16, 16, 16, 17, 17, 18, 18, 18, 18, 19,
        19, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 24, 25, 25, 26, 27,
        28, 28, 28, 29, 29, 29, 29, 30, 30, 31, 33, 33, 33, 34, 34, 35, 35, 35,
        36, 37, 37, 37, 38, 38, 38, 38, 39, 39, 40, 40, 40, 41, 41, 42, 42, 42,
        43, 43, 43, 46, 46, 46, 47, 47, 48, 48, 48, 48, 49, 49, 50, 51, 51, 52,
        52, 53, 54, 54, 54, 55, 55, 56, 56, 56, 57, 58, 58, 58, 58, 59, 59, 59,
        60, 61, 61, 61, 61, 62, 62, 63, 63, 64, 65, 65, 66, 66, 66, 68, 68, 69,
        69, 69, 70, 71, 72, 73, 73, 73, 74, 74, 74, 75, 75, 75, 75, 76, 76, 76,
        77, 78, 78, 78, 78])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  4,  4,  4,  5,  5,  6,  6,
         7,  7,  7,  8,  8,  8,  8,  9,  9, 10, 10, 11, 11, 12, 12, 12, 12, 13,
        13, 13, 14, 14, 14, 15, 15, 16, 16, 16, 16, 17, 17, 18, 18, 18, 18, 19,
        19, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 24, 25, 25, 26, 27,
        28, 28, 28, 29, 29, 29, 29, 30, 30, 31, 33, 33, 33, 34, 34, 35, 35, 35,
        36, 37, 37, 37, 38, 38, 38, 38, 39, 39, 40, 40, 40, 41, 41, 42, 42, 42,
        43, 43, 43, 46, 46, 46, 47, 47, 48, 48, 48, 48, 49, 49, 50, 51, 51, 52,
        52, 53, 54, 54, 54, 55, 55, 56, 56, 56, 57, 58, 58, 58, 58, 59, 59, 59,
        60, 61, 61, 61, 61, 62, 62, 63, 63, 64, 65, 65, 66, 66, 66, 68, 68, 69,
        69, 69, 70, 71, 72, 73, 73, 73, 74, 74, 74, 75, 75, 75, 75, 76, 76, 76,
        77, 78, 78, 78, 78])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,  6,  7,  7,  8,
         8,  9,  9,  9, 10, 10, 11, 11, 11, 12, 12, 14, 14, 14, 14, 15, 15, 15,
        16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21, 23,
        23, 23, 25, 25, 26, 26, 26, 26, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30,
        31, 32, 32, 32, 33, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 37,
        37, 38, 38, 38, 39, 39, 39, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
        47, 48, 48, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 53, 54, 54, 54,
        55, 56, 57, 57, 58, 58, 58, 59, 60, 60, 60, 61, 61, 61, 62, 62, 63, 63,
        63, 63, 64, 64, 66, 66, 67, 67, 68, 68, 69, 69, 70, 71, 71, 71, 72, 72,
        73, 75, 75, 76, 76, 77, 77, 77, 78, 78, 78, 79, 79, 79, 80, 80, 81, 81,
        82, 82, 82, 82, 83, 84, 84, 85, 85, 85, 86, 86, 87, 87, 87, 88, 88, 89,
        89, 90, 90, 91, 91, 92, 92, 93, 93, 94, 94, 94, 95, 95, 96, 96, 96, 97,
        97, 97, 97, 98, 98, 98])
out.node[k].sort()[0]:
tensor([ 0,  0,  1,  1,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,  6,  7,  7,  8,
         8,  9,  9,  9, 10, 10, 11, 11, 11, 12, 12, 14, 14, 14, 14, 15, 15, 15,
        16, 16, 16, 17, 17, 17, 18, 18, 18, 19, 19, 20, 20, 20, 21, 21, 21, 23,
        23, 23, 25, 25, 26, 26, 26, 26, 27, 28, 28, 28, 29, 29, 29, 30, 30, 30,
        31, 32, 32, 32, 33, 34, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 37,
        37, 38, 38, 38, 39, 39, 39, 42, 43, 43, 44, 44, 45, 45, 46, 46, 47, 47,
        47, 48, 48, 49, 49, 50, 51, 51, 51, 52, 52, 52, 53, 53, 53, 54, 54, 54,
        55, 56, 57, 57, 58, 58, 58, 59, 60, 60, 60, 61, 61, 61, 62, 62, 63, 63,
        63, 63, 64, 64, 66, 66, 67, 67, 68, 68, 69, 69, 70, 71, 71, 71, 72, 72,
        73, 75, 75, 76, 76, 77, 77, 77, 78, 78, 78, 79, 79, 79, 80, 80, 81, 81,
        82, 82, 82, 82, 83, 84, 84, 85, 85, 85, 86, 86, 87, 87, 87, 88, 88, 89,
        89, 90, 90, 91, 91, 92, 92, 93, 93, 94, 94, 94, 95, 95, 96, 96, 96, 97,
        97, 97, 97, 98, 98, 98])
before dist_neighbor_sample
p_srcs=tensor([18]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([18]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([18]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([63, 62, 38, 75, 31, 10,  0, 18, 11]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'rev_e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([63, 62, 38, 75, 31, 10,  0, 18, 11]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 0, 69, 38,  2,  9, 17, 22, 74, 63,  6, 38]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([ 0, 69, 38,  2,  9, 17, 22, 74, 63,  6, 38]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'rev_e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([ 0, 69, 38,  2,  9, 17, 22, 74, 63,  6, 38]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([63, 62, 38, 75, 31, 10,  0, 18, 11]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v1')
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,
         5,  6,  6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 11, 11, 11, 12, 12,
        12, 13, 13, 13, 13, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18,
        19, 19, 19, 20, 20, 21, 21, 22, 22, 22, 23, 23, 24, 24, 24, 24, 25, 25,
        26, 27, 27, 27, 28, 28, 29, 29, 29, 30, 30, 31, 32, 32, 33, 33, 34, 34,
        34, 35, 35, 35, 36, 37, 37, 38, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42,
        42, 43, 43, 43, 45, 45, 46, 47, 47, 47, 48, 48, 48, 48, 49, 50, 51, 52,
        53, 54, 54, 55, 56, 57, 57, 58, 58, 58, 58, 59, 59, 59, 60, 61, 61, 61,
        62, 62, 63, 63, 63, 64, 64, 66, 66, 67, 68, 68, 68, 69, 69, 69, 69, 70,
        70, 71, 72, 72, 73, 73, 73, 74, 74, 74, 75, 75, 75, 75, 76, 77, 77, 77,
        78, 78, 78, 78])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  4,  4,  4,  5,  5,
         5,  6,  6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 11, 11, 11, 12, 12,
        12, 13, 13, 13, 13, 14, 14, 15, 15, 15, 16, 16, 16, 17, 17, 17, 18, 18,
        19, 19, 19, 20, 20, 21, 21, 22, 22, 22, 23, 23, 24, 24, 24, 24, 25, 25,
        26, 27, 27, 27, 28, 28, 29, 29, 29, 30, 30, 31, 32, 32, 33, 33, 34, 34,
        34, 35, 35, 35, 36, 37, 37, 38, 38, 38, 38, 39, 39, 40, 40, 41, 41, 42,
        42, 43, 43, 43, 45, 45, 46, 47, 47, 47, 48, 48, 48, 48, 49, 50, 51, 52,
        53, 54, 54, 55, 56, 57, 57, 58, 58, 58, 58, 59, 59, 59, 60, 61, 61, 61,
        62, 62, 63, 63, 63, 64, 64, 66, 66, 67, 68, 68, 68, 69, 69, 69, 69, 70,
        70, 71, 72, 72, 73, 73, 73, 74, 74, 74, 75, 75, 75, 75, 76, 77, 77, 77,
        78, 78, 78, 78])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  6,  7,
         8,  8,  8,  8,  9,  9, 10, 10, 11, 11, 11, 12, 13, 14, 14, 14, 15, 15,
        15, 16, 16, 17, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 21, 23, 23, 23,
        24, 25, 26, 26, 26, 27, 28, 28, 28, 29, 29, 29, 30, 30, 31, 31, 32, 32,
        32, 33, 33, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 38,
        39, 39, 39, 39, 42, 43, 43, 44, 44, 45, 46, 46, 46, 47, 48, 48, 48, 49,
        49, 50, 50, 50, 51, 51, 51, 52, 53, 53, 53, 53, 54, 54, 55, 55, 56, 57,
        57, 57, 58, 58, 59, 59, 60, 61, 62, 62, 63, 63, 63, 64, 64, 64, 66, 66,
        67, 68, 68, 69, 69, 69, 70, 70, 71, 71, 71, 71, 72, 72, 72, 73, 75, 75,
        75, 76, 76, 77, 77, 77, 78, 78, 78, 78, 79, 79, 79, 79, 80, 81, 82, 82,
        82, 83, 84, 84, 85, 85, 86, 86, 86, 87, 87, 87, 88, 88, 89, 90, 91, 92,
        92, 93, 93, 94, 94, 95, 95, 96, 96, 97, 97, 97, 97, 98, 98])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  1,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  6,  7,
         8,  8,  8,  8,  9,  9, 10, 10, 11, 11, 11, 12, 13, 14, 14, 14, 15, 15,
        15, 16, 16, 17, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 21, 23, 23, 23,
        24, 25, 26, 26, 26, 27, 28, 28, 28, 29, 29, 29, 30, 30, 31, 31, 32, 32,
        32, 33, 33, 34, 34, 34, 35, 35, 35, 36, 36, 36, 37, 37, 38, 38, 38, 38,
        39, 39, 39, 39, 42, 43, 43, 44, 44, 45, 46, 46, 46, 47, 48, 48, 48, 49,
        49, 50, 50, 50, 51, 51, 51, 52, 53, 53, 53, 53, 54, 54, 55, 55, 56, 57,
        57, 57, 58, 58, 59, 59, 60, 61, 62, 62, 63, 63, 63, 64, 64, 64, 66, 66,
        67, 68, 68, 69, 69, 69, 70, 70, 71, 71, 71, 71, 72, 72, 72, 73, 75, 75,
        75, 76, 76, 77, 77, 77, 78, 78, 78, 78, 79, 79, 79, 79, 80, 81, 82, 82,
        82, 83, 84, 84, 85, 85, 86, 86, 86, 87, 87, 87, 88, 88, 89, 90, 91, 92,
        92, 93, 93, 94, 94, 95, 95, 96, 96, 97, 97, 97, 97, 98, 98])
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal_hetero[uniform-seed_time0] indptr: tensor([  0,   8,  12,  18,  25,  31,  37,  47,  51,  56,  62,  65,  70,  76,
         79,  86,  90,  94, 101, 103, 104, 111])
index: tensor([ 1,  2,  3,  4, 11, 14, 18, 19,  8, 15, 17, 20,  2,  3,  5,  7, 10, 14,
         3,  8,  9, 12, 13, 14, 18,  1,  3,  6, 16, 17, 18,  1,  3,  4,  7, 16,
        19,  1,  5,  8,  9, 13, 14, 16, 17, 19, 20,  4,  8, 13, 16,  0,  9, 14,
        17, 18,  5,  9, 14, 15, 17, 20,  2,  7, 10,  0,  1,  7, 17, 18,  0,  4,
         7, 12, 16, 19, 10, 14, 15,  5, 11, 12, 13, 15, 17, 19,  5,  6,  9, 13,
         0,  6, 17, 19,  0,  1,  3,  4, 10, 13, 15,  6, 11, 15,  3,  8, 14, 15,
        17, 18, 19])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([0, 0]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 0]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([], dtype=torch.int64)
out.node[k].sort()[0]:
tensor([], dtype=torch.int64)
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([0, 0, 2, 9])
out.node[k].sort()[0]:
tensor([0, 0, 2, 9])
before dist_neighbor_sample
p_srcs=tensor([2]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([5, 7]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([2]), one_hop_num=-1, p_seed_time=tensor([0]), edge_type=('v0', 'e0', 'v1')
p_srcs=tensor([5, 7]), one_hop_num=-1, p_seed_time=tensor([0, 0]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([4, 7, 4, 8]), one_hop_num=-1, p_seed_time=tensor([0, 0, 0, 0]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
p_srcs=tensor([4, 7, 4, 8]), one_hop_num=-1, p_seed_time=tensor([0, 0, 0, 0]), edge_type=('v0', 'e0', 'v0')
out_dist.node[k].sort()[0]:
tensor([0, 1, 1, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 8])
out.node[k].sort()[0]:
tensor([0, 1, 1, 3, 3, 4, 4, 5, 6, 6, 7, 7, 8, 8])
out_dist.node[k].sort()[0]:
tensor([0, 2])
out.node[k].sort()[0]:
tensor([0, 2])
before dist_neighbor_sample
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal_hetero[uniform-seed_time1] indptr: tensor([ 0,  9, 13, 19, 27, 34, 38, 44, 47, 52, 56, 58, 66, 70, 74, 79, 81, 88,
        93])
index: tensor([ 0,  3,  6, 10, 12, 13, 14, 15, 16,  0,  4,  7, 10,  1,  4,  6,  8, 15,
        17,  0,  1,  2,  3,  6, 13, 14, 17,  1,  5,  6,  8, 12, 13, 14,  0,  1,
         8,  9,  3,  5,  9, 10, 11, 16,  1, 14, 16,  4, 10, 12, 13, 16,  5,  7,
         9, 11,  8, 16,  1,  2,  4,  6,  7,  8, 10, 11,  3,  5,  9, 15,  3,  9,
        10, 12,  3,  5,  6, 11, 16,  1, 15,  1,  5,  6,  7, 10, 16, 17,  2,  7,
        11, 12, 16])
after partitioning
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 4, 4, 9, 0, 4, 9]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([5, 6, 5, 5, 1]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([5, 6, 5, 5, 1]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 4, 4, 9, 0, 4, 9]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3, 3, 3, 3, 3]), edge_type=('v0', 'e0', 'v1')
out_dist.node[k].sort()[0]:
tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6,
        6])
out.node[k].sort()[0]:
tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6,
        6])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,
         6,  7,  7,  7,  7,  9,  9,  9,  9, 10, 10])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,
         6,  7,  7,  7,  7,  9,  9,  9,  9, 10, 10])
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([2]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
p_srcs=tensor([2]), one_hop_num=-1, p_seed_time=tensor([3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3]), edge_type=('v0', 'e0', 'v0')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 2]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v1', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 2]), one_hop_num=-1, p_seed_time=tensor([3, 3]), edge_type=('v0', 'e0', 'v1')
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 3, 3]), edge_type=('v1', 'e0', 'v0')
before dist_neighbor_sample
out_dist.node[k].sort()[0]:
tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6])
out.node[k].sort()[0]:
tensor([0, 0, 0, 0, 1, 1, 1, 1, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6])
out_dist.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,
         6,  6,  7,  7,  7,  7,  8,  8,  9,  9,  9,  9, 10])
out.node[k].sort()[0]:
tensor([ 0,  0,  0,  0,  1,  1,  1,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,
         6,  6,  7,  7,  7,  7,  8,  8,  9,  9,  9,  9, 10])
[1m============================= test session starts ==============================[0m
platform linux -- Python 3.11.5, pytest-7.4.3, pluggy-1.3.0 -- /home/pyg/anaconda3/envs/kgajdamo-dist/bin/python
cachedir: .pytest_cache
rootdir: /home/pyg/kgajdamo/graphlearn-dev/pytorch_geometric-kgajdamo
configfile: pyproject.toml
[1mcollecting ... [0mcollected 22 items

test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler[False] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([8]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 4]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler[True] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 0, 1]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=None, edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[uniform-None] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 5]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([5]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[uniform-seed_time1] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([0, 1]), one_hop_num=-1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[last-None] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 5]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([5]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([4, 4]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_temporal[last-seed_time1] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 6]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([0, 1]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([6, 6]), edge_type=None
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[uniform-seed_time0] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([1]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[uniform-seed_time1] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=-1, p_seed_time=tensor([3, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=-1, p_seed_time=tensor([7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=-1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=-1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[last-seed_time0] before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([1, 1]), edge_type=None
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([1]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_edge_level_temporal[last-seed_time1] before dist_neighbor_sample
p_srcs=tensor([4, 0]), one_hop_num=1, p_seed_time=tensor([3, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([1]), one_hop_num=1, p_seed_time=tensor([7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([6, 7]), one_hop_num=1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
before dist_neighbor_sample
p_srcs=tensor([7, 8]), one_hop_num=1, p_seed_time=tensor([7, 7]), edge_type=None
before dist_neighbor_sample
[32mPASSED[0m
test/distributed/test_dist_link_neighbor_sampler.py::test_dist_link_neighbor_sampler_hetero[False] indptr: tensor([   0,   15,   29,   47,   63,   79,   90,   99,  108,  117,  134,  143,
         155,  163,  178,  187,  202,  213,  222,  234,  246,  257,  270,  279,
         290,  297,  305,  313,  322,  337,  349,  360,  364,  378,  389,  395,
         405,  412,  421,  429,  437,  443,  459,  465,  473,  487,  498,  513,
         524,  533,  548,  564,  570,  582,  590,  601,  615,  622,  635,  644,
         653,  660,  667,  675,  691,  708,  723,  733,  743,  752,  759,  768,
         784,  795,  800,  804,  813,  819,  831,  840,  843,  847,  857,  869,
         880,  889,  903,  913,  919,  928,  943,  955,  972,  985,  994, 1010,
        1022, 1036, 1047, 1061, 1071, 1081, 1091, 1105, 1121, 1137, 1146, 1161,
        1176, 1187, 1194, 1206, 1215, 1228, 1236, 1244, 1259, 1269, 1282, 1293,
        1308, 1324, 1340, 1353, 1367, 1376, 1387, 1403, 1421, 1434, 1447, 1456,
        1468, 1475, 1494, 1507, 1520, 1533, 1544, 1561, 1572, 1584, 1596, 1605,
        1622, 1626, 1639, 1653, 1664, 1674, 1684, 1696, 1707, 1717, 1730, 1739,
        1754, 1772, 1784, 1791, 1816, 1830, 1842, 1858, 1873, 1890, 1904, 1918,
        1936, 1949, 1963, 1971, 1984, 1991, 2006, 2017, 2031, 2042, 2055, 2067,
        2075, 2092, 2098, 2111, 2124, 2136, 2152, 2168, 2185, 2199, 2212, 2221,
        2234, 2245, 2260, 2272, 2285, 2296, 2316, 2327, 2344, 2352, 2367, 2385])
index: tensor([  4,  18,  49,  ..., 174, 182, 195])
after partitioning


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
[1m[31m/home/pyg/anaconda3/envs/kgajdamo-dist/lib/python3.11/multiprocessing/popen_fork.py[0m:27: KeyboardInterrupt
[33m(to show a full traceback on KeyboardInterrupt use --full-trace)[0m
[32m============================= [32m[1m10 passed[0m[32m in 48.55s[0m[32m ==============================[0m
